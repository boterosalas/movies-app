{"version":3,"sources":["routers/UserContext.js","components/login/LoginScreen.js","components/shared/footer/Footer.js","helpers/helpers.js","components/shared/posterGridMovie/PosterGridMovies.js","components/shared/slideShow/SlideShow.js","components/home/HomeScreen.js","components/movie/MovieScreen.js","components/search/SearchScreen.js","components/shared/navbar/Navbar.js","routers/DashboardRoute.js","routers/AppRouter.js","index.js"],"names":["UserContext","createContext","LoginScreen","history","useHistory","setUser","useContext","useState","name","email","formState","setFormState","handleInputChange","target","value","className","onSubmit","e","preventDefault","replace","htmlFor","onChange","placeholder","type","id","Footer","BASE_URL","QUERY_URL","getPosterUrl","poster_path","PosterGridMovies","moviesList","map","movie","to","src","alt","title","vote_average","SlideShow","movies","useEffect","Swiper","loop","navigation","nextEl","prevEl","style","backdrop_path","text","overview","limit","length","substring","HomeScreen","setMovies","moviesPosterGrid","setMoviesPosterGrid","page","setPage","fetch","then","res","json","results","console","log","p","onClick","MovieScreen","setMovie","loading","setLoading","useParams","movieId","data","success","catch","err","tagline","genres","idx","homepage","rel","href","SearchScreen","Navbar","textSearch","setTextSearch","activeClassName","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","trim","push","DashboardRoute","user","path","component","AppRouter","Provider","exac","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbad931e.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../routers/UserContext';\r\nimport './Login.css';\r\n\r\nconst LoginScreen = () => {\r\n    let history = useHistory();\r\n    const { setUser } = useContext(UserContext);\r\n    const [formState, setFormState] = useState({\r\n        name: '',\r\n        email: ''\r\n    });\r\n\r\n    const { name, email } = formState;\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormState({\r\n            ...formState,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        setUser(formState);\r\n        history.replace('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"principal-container\">\r\n            <h1 className=\"text-dark\">Inicio de sesión</h1>\r\n            <form className=\"form\" onSubmit={handleLogin}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"inputName\" className=\"form-label\">Nombre</label>\r\n                    <input onChange={handleInputChange} value={name} name=\"name\" placeholder=\"John Doe\" type=\"text\" className=\"form-control\" id=\"inputName\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"inputEmail\" className=\"form-label\">Correo</label>\r\n                    <input onChange={handleInputChange} value={email} name=\"email\" placeholder=\"johndoe@example.com\" type=\"email\" className=\"form-control\" id=\"inputEmail\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Ingresar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer-container\">\r\n            © MoviesApp - 2021\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const BASE_URL = 'https://api.themoviedb.org/3/movie/now_playing?api_key=d43f4ea2ca33218a685f04dad0a79011&language=es-ES';\r\n\r\nexport const QUERY_URL = 'https://api.themoviedb.org/3/search/movie?api_key=d43f4ea2ca33218a685f04dad0a79011&language=es-ES';\r\n\r\nexport const getDetailUrl = (movieId) =>{\r\n    return `https://api.themoviedb.org/3/movie/${movieId}?api_key=d43f4ea2ca33218a685f04dad0a79011&language=es-ES`;\r\n}\r\n\r\nexport const getPosterUrl = (poster_path) => {\r\n    return poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : '/assets/no-image.jpg';\r\n}\r\n\r\nexport const extractCharacters = (text, limit) => {\r\n    if (text.length <= limit){\r\n        return text;\r\n    } else {\r\n        return `${text.substring(0, limit - 3)}...`;\r\n    }\r\n}\r\n\r\nexport const backGroundStyles = (backdrop_path) => {\r\n    return {\r\n        'backgroundSize': 'cover',\r\n        'backgroundPosition': 'center',\r\n        'backgroundImage': 'url(https://image.tmdb.org/t/p/w500' + backdrop_path + ')'\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getPosterUrl } from '../../../helpers/helpers';\r\nimport './PosterGridMovies.css';\r\n\r\nconst PosterGridMovies = ({ moviesList }) => {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                moviesList.map(movie => {\r\n                    return (\r\n                        <div key={movie.id} className=\"col-6 col-sm-4 col-md-3 mb-4\">\r\n                            <Link to={`/movie/${movie.id}`}>\r\n                                <img src={getPosterUrl(movie.poster_path)} alt={movie.title} className=\"img-fluid poster\" />\r\n                            </Link>\r\n                            <div>\r\n                                <p className=\"text-warning text-right m-0 w-100\">\r\n                                    {movie.vote_average}\r\n                                </p>\r\n                                <h3 className=\"movie-title\">{movie.title}</h3>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosterGridMovies\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swiper from 'swiper/bundle';\r\nimport 'swiper/swiper-bundle.css';\r\nimport { backGroundStyles, extractCharacters } from '../../../helpers/helpers';\r\nimport './SlideShow.css';\r\n\r\nconst SlideShow = ({ movies }) => {\r\n    useEffect(() => {\r\n        const swiper = new Swiper('.swiper-container', {\r\n            // Optional parameters\r\n            loop: true,\r\n\r\n            // Navigation arrows\r\n            navigation: {\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev',\r\n            },\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"swiper-container\">\r\n            {/* <!-- Additional required wrapper --> */}\r\n            <div className=\"swiper-wrapper\">\r\n                {/* <!-- Slides --> */}\r\n                {movies.map(movie => {\r\n                    return (\r\n                        <Link to={`/movie/${movie.id}`} key={movie.id} className=\"swiper-slide\" style={backGroundStyles(movie.backdrop_path)}>\r\n                            <div className=\"movie-description\">\r\n                                <h3>{movie.title}</h3>\r\n                                <p>{extractCharacters(movie.overview, 130)}</p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <!-- If we need navigation buttons --> */}\r\n            <div className=\"swiper-button-prev\"></div>\r\n            <div className=\"swiper-button-next\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlideShow\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BASE_URL } from '../../helpers/helpers';\r\nimport PosterGridMovies from '../shared/posterGridMovie/PosterGridMovies';\r\nimport SlideShow from '../shared/slideShow/SlideShow';\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [moviesPosterGrid, setMoviesPosterGrid] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const getMoviesInit = () => {\r\n        fetch(`${BASE_URL}&page=1}`)\r\n            .then(res => res.json())\r\n            .then(({ results }) => {\r\n                console.log(results)\r\n                setMovies(p => [...p, ...results]);\r\n                setMoviesPosterGrid(p => [...p, ...results]);\r\n                setPage(p => p + 1);\r\n            });\r\n    }\r\n\r\n    const getMoviesPosterGrid = () => {\r\n        fetch(`${BASE_URL}&page=${page}`)\r\n            .then(res => res.json())\r\n            .then(({ results }) => {\r\n                setMoviesPosterGrid(p => [...p, ...results]);\r\n                setPage(p => p + 1);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMoviesInit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>En cartelera</h1>\r\n            </header>\r\n            <hr />\r\n            {movies.length > 0 &&\r\n                <>\r\n                    <section className=\"row\">\r\n                        <div className=\"col\">\r\n                            <SlideShow movies={movies} />\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"mt-5\">\r\n                        <h2>Películas</h2>\r\n                        <hr />\r\n                        <PosterGridMovies moviesList={moviesPosterGrid} />\r\n                    </section>\r\n                    <div className=\"col-8 mx-auto mt-5 mb-5\">\r\n                        <button onClick={getMoviesPosterGrid} className=\"btn btn-primary btn-block\">Cargar más</button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getDetailUrl, getPosterUrl } from '../../helpers/helpers';\r\nimport './MovieScreen.css';\r\n\r\nconst MovieScreen = () => {\r\n    let history = useHistory();\r\n\r\n    const [movie, setMovie] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        fetch(getDetailUrl(id))\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.success === false) {\r\n                    return history.replace('/');\r\n                } else {\r\n                    setMovie(data);\r\n                    setLoading(false);\r\n                }\r\n            })\r\n            .catch(err => history.replace('/'))\r\n    }, [id, history])\r\n    return (\r\n        <div>\r\n            {\r\n                !loading &&\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <img src={getPosterUrl(movie.poster_path)} alt={movie.title} className=\"img-thumbnail\" />\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <h1>{movie.title}</h1>\r\n                            <p className=\"m-0\">{movie.tagline}</p>\r\n                            <hr className=\"background-white\" />\r\n                            <p className=\"m-0 text-warning\">{movie.vote_average}</p>\r\n                            <p className=\"m-0\">Géneros:</p>\r\n                            <p className=\"m-0\">{movie.genres.map(({ name, id }, idx) => {\r\n                                return (<span key={id}>{name}{movie.genres.length === idx + 1 ? '' : ', '}</span>)\r\n                            })}</p>\r\n                            {movie.homepage !== '' &&\r\n                                <a className=\"underline\" target=\"_blank\" rel=\"noreferrer\" href={movie.homepage}>Página principal</a>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <h2 className=\"mt-4\">Sinopsis</h2>\r\n                    <p>{movie.overview}</p>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { QUERY_URL } from '../../helpers/helpers';\r\nimport PosterGridMovies from '../shared/posterGridMovie/PosterGridMovies';\r\n\r\nconst SearchScreen = () => {\r\n    let { text } = useParams();\r\n    const [moviesPosterGrid, setMoviesPosterGrid] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const getMoviesPosterGrid = () => {\r\n        fetch(`${QUERY_URL}&query=${text}&page=${page}&include_adult=false`)\r\n            .then(res => res.json())\r\n            .then(({ results }) => {\r\n                setMoviesPosterGrid(p => [...p, ...results]);\r\n                setPage(p => p + 1);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`${QUERY_URL}&query=${text}&page=1&include_adult=false`)\r\n            .then(res => res.json())\r\n            .then(({ results }) => {\r\n                setMoviesPosterGrid(p => [...results]);\r\n                setPage(p => p + 1);\r\n            })\r\n    }, [text])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>Resultados por: <small>{text}</small></h1>\r\n            </header>\r\n            <hr />\r\n            {moviesPosterGrid.length > 0 &&\r\n                <>\r\n                    <section className=\"mt-5\">\r\n                        <PosterGridMovies moviesList={moviesPosterGrid} />\r\n                    </section>\r\n                    <div className=\"col-8 mx-auto mt-5 mb-5\">\r\n                        <button onClick={getMoviesPosterGrid} className=\"btn btn-primary btn-block\">Cargar más</button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import React, { useContext, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from '../../../routers/UserContext';\r\n\r\nconst Navbar = () => {\r\n    let history = useHistory();\r\n    const { setUser } = useContext(UserContext);\r\n    const [textSearch, setTextSearch] = useState('');\r\n\r\n    const searchMovie = (e) => {\r\n        e.preventDefault();\r\n        if (textSearch.trim().length === 0) return;\r\n        history.push(`/search/${textSearch}`);\r\n    }\r\n\r\n    const onLogoutClick = () => {\r\n        setUser(null);\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-5\">\r\n            <NavLink\r\n                activeClassName=\"active\"\r\n                className=\"navbar-brand\"\r\n                exact\r\n                to=\"/\"\r\n            >\r\n                MoviesApp\r\n            </NavLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\"></ul>\r\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={searchMovie}>\r\n                    <input value={textSearch} onChange={(e) => { setTextSearch(e.target.value) }} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Buscar una película\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Buscar</button>\r\n                </form>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <span\r\n                            className=\"nav-item nav-link pointer\"\r\n                            id=\"logout-button\"\r\n                            onClick={onLogoutClick}\r\n                        >\r\n                            Salir\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useContext, useEffect } from 'react';\r\nimport { Redirect, Route, Router, Switch, useHistory } from 'react-router-dom';\r\nimport Footer from '../components/shared/footer/Footer';\r\nimport HomeScreen from '../components/home/HomeScreen';\r\nimport MovieScreen from '../components/movie/MovieScreen';\r\nimport SearchScreen from '../components/search/SearchScreen';\r\nimport Navbar from '../components/shared/navbar/Navbar';\r\nimport { UserContext } from './UserContext';\r\nimport './DashboardRoute.css';\r\n\r\nconst DashboardRoute = () => {\r\n    let history = useHistory();\r\n    const { user } = useContext(UserContext);\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.replace('/login');\r\n        }\r\n    }, [user, history])\r\n    return (\r\n        <>\r\n            {\r\n                user &&\r\n                <>\r\n                    <Navbar />\r\n                    <main className=\"container mt-7\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={HomeScreen} />\r\n                            <Route exact path=\"/search/:text\" component={SearchScreen} />\r\n                            <Route exact path=\"/movie/:id\" component={MovieScreen} />\r\n                            <Redirect to=\"/\" />\r\n                        </Switch>\r\n                    </main>\r\n                    <Footer />\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRoute\r\n","import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport DashboardRoute from './DashboardRoute';\r\nimport { UserContext } from './UserContext';\r\n\r\n\r\nconst AppRouter = () => {\r\n    const [user, setUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }} >\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exac path=\"/login\" component={LoginScreen} />\r\n                        <Route exac path=\"/\" component={DashboardRoute} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\n\nReactDOM.render(\n  <AppRouter />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}